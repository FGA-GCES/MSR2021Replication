current situationw built an electron applic that use web api guard by azur ad b2c.the authent process happen as follows:us want to log inelectron prepar the initi oidc request (return type code with oidc scope included)electron (main thread) open system browser with the correct )electron app handl the redirect (new instanc handling, url parsing, all thing work fine)correct pars inform is use to dispatch the last auth request (on the main process again)app receiv auth token and user is log inal of this work without the need of embed web-view and local web server which handl localhost redirects. at least to my understand we should adher to the current state of the art regard oidc usag in nativ applications.problemth abov mention process work well - it onli has one caveat: the browser window where the user enter their credenti stay open. as far as i can tell this happen becaus the browser duti redirect but never know that it succeed (the network monitor of the browser will show a failur even though the redirect was handl by the os).a far as i know from inspect the github desktop application, the slack desktop applic as well as this .net consol applic sampl by brock allen this behavior is to be expected. the main problem with azur ad b2c is that the ident provid never leav the login form hold the enter credentials.a far as i can see (and i have spent a lot of time on googl and the microsoft docs) there is no obvious way to chang this behavior. the idp use by those app navig to anoth page and display a messag to close the tab when the login succeeded. i tri to look for guidanc in the msal document - as it is microsoft own librari for this use case - but they don't appear to be consid custom protocol at all (appar the usag of the system browser is even activ discourag for uwp).ther was an attempt to offer an msal experi for electron dure a microsoft internship but the effort appear to have been abandoned. it would have also use a new electron browser window within the same process which we activ tri to avoid.a far as i see the current best thing you can get is to have the idp navig to a window which can not be use to extract credenti should the user forget to close it.thi lead to my main question: is it possibl to achiev this behavior with azur ad b2c or are we forc to fall back to an embed web-view experience?
