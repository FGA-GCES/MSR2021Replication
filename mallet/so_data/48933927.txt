there are a lot of question on this topic, but they don't seem to distinguish between execut for desktop or server-sid apps. i suppos my first question would be: what the difference? for example, zeit/pkg say they are a "node.j binari compiler", wherea nwjs (former node-webkit) say they are a "an app runtim base on chromium and node.js".i tri zeit/pkg and it work great, but have read that there can be perform issu unless it configur properly. i want to make sure i was choos the right tool and came across nwjs. it seem to do a lot of the same stuff pkg does, but has a larger following, as well as more doc and a robust api. can i use nwjs as a server-sid execut (i.e. not use the desktop feature) the same way i would use pkg?this answer state that nwjs "is an option, but it realli isn't set-up to do a server - client type relationship", but then a comment say "you can launch a server from node-webkit just in the way you launch it in node.js. it just that node-webkit provid anoth way beyond b/s architecture".so, is nwjs effect the same as pkg, or fundament different?i realiz that there also electron, which state "build cross platform desktop apps" and appear similar to nwjs. i'm not tri to get into a electron vs nwjs debate, but rather desktop vs. server, if there a difference.
