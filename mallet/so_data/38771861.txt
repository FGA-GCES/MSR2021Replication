i have a react+redux applic (built and distribut with electron) that onc a day, at a given hour in the night, should download and save to the user filesystem multipl files.th api call and the overal number of oper seem to me a bit too much to be done in the reducers, so i'm here to ask if there is a better design pattern for this.just to give you an idea, here the oper i should perform to complet this task:[api call] get a list of folder from the remot service[api call] for each folder, get a list of contents[fs]: verifi if the local content is present and the same version as the remot one[api call] if not, download content[fs] save content to filesystemth number of involv folder rang from 10 to 30, and the content could easili go up to 100 or more.key points:th user is not use the app dure this operation, so no need for webwork or other async black magicth sync could be done by an extern script in anoth language, but i'd rather keep all the logic in a singl app for eas of distribut and setupal the point abov mark as [api call] are asynchron in my current setup, so there a bit of non-trivi callback manag involvedani idea on where i could put this whole bunch of code, while still keep my code readabl and maintainable? should it be the reducer, action creator, contain component, present compon or someth else?thanks!
