i'm speak far beyond my current skill set and understand and do not think i have discov someth new. i just want to understand the reason behind the approach employ by these tools. i was think over the pros and con of how to distribut an applic under differ options, and start to wonder about this becaus i thought it would be so easi if i could just distribut the entir web applciat as a singl file and say open it up local in your favorit browser.if i have understood correctly, electron packag a javascript engine, a browser, and the html/css/js applic code together. some peopl have written that the result is a minimum file size of 100 mb and that it use a lot of system resourc due to some type of optimization.i read of anoth recently, deskgap, that is attempt to do about the same except it not go to packag a browser but instead use the os browser, or someth along those lines.on a few day ago, i came across the archiv document for mozilla firefox xulrunn which is deprec but appar was capabl of build a desktop application. i think they are now work on a spider node compliment to spider monkey.lastly, i'v been work with the extens api and have been abl to run my web app through the extens only. the onli thing i'd like to have addit are a better way to write the user work to the hard drive and a way to secur the code a bit. the extens environ can run the applic almost as if it were a desktop application, exclud the file system, and doesn't requir packag anyth els with it. if it had privileg to manag the file system then it appear that an extens would be a great place to build a desktop application.so, my novic question is whi couldn't someth be made to work more like an extens doe and make use of the browser rather than packag one with each application? or, take an open sourc browser, give it access to the local disk, make it run html/css/js that is in an unread form, and have that instal onc onli to run ani desktop app assembl appropri from the hmtl/css/js. that is as oppos to alway packag one with each individu application. in a sense, it appear that the object of all of these tool is to simul a browser that can serv local page to itself and have access to the local file system and hide the code. what prevent make someth like a browser for brows the web and a browser for run local store applic that a user would instal onc and run all their web app in it? it would seem that the latter would be easier than the former.i assum i'm not understand someth fundament important. thank you for consid my question.
