i'm build a desktop app use electron, react, and redux.on of the key compon of this desktop app is go to be tie certain compon of my redux state to physic file on the drive. the websit is the master copi of whether certain data is access to the user. the app download a list of file it should have access to, and then track which file have alreadi been downloaded. a typic workflow would be to load the list, then hit download', and when the item is downloaded, use it in the app.when i updat the local redux list of items, i need to also manag the state of those files. when a record is remov from the redux store, i need to delet the associ physic files.thi put me in a weird space. it feel really, realli odd to write a reduc that make chang to the local file structure. it even wors becaus i'm use electron-redux to keep multipl process in sync -- i'm run a complet redux stack in both the main process and my render window(s), with electron-redux to keep them in a share state.th more i look at this, the more it feel like the reduc is complet the wrong place to do this. the flip side is that this code definit need to happen base on state, which make redux the exact right place to do it. not sure what the right solut here is -- i have contradict design principl in play, and i'm not sure how to resolv that.edit:part of the difficulti here is that the reduc isn't do a simpl replac of state. in this case, the reduc is do a pretti complic algorithm:curr state:not that item #2 localst didn't change, but the serverst item were overwritten. item #1 local file would need to be remov from the file system, user no longer has permiss for them.
