i'v been implement a chat client in electron (chrome) and react. our top prioriti is speed. it behoov us, then, to use a virtual list compon (also known as "buffer render" or "window render"). we'v explor react-virtualized, react-window, and react-infinite, among others. one issu all these compon have in common is that if support list element of variabl heights, the height need to be known in advance. now, some chat are veri long, and other are veri short, so that present a challeng for us. (imag and video are easi thank to exif data and ffprobe). so, we'r face with the challeng of measur height while also strain to be extrem performant. one obvious techniqu is to put the element in a browser contain off-viewport, perform the measurements, and then render the list. but that hurt us on the perform requir aspect. softwar like react-virtualized/cellmeasur (which is no longer maintain by the origin author) and react-window make us of this technique, built in to the library, but perform is somewhat slow as well as unreliable. a similar idea that might be more perform would be to use a background electron browser window to do the render and measuring, but my intuit is that wouldn't be that much faster.i submit that there must be some solv way to figur out string height in advance, accord to word wrap, max width, and font rules. my current idea is to use a librari like string-pixel-width in order to calcul row height as soon as we get the text data through our api. basically, the librari use this piec of code to generat a map of charact width [*]. then, onc we know how wide each text, we separ each line when it max out the comput max row width, and final infer list element height through row count. it go to requir a littl bit of algorithm fiddl due to break-word but there are librari to help with that â€“ css-line-break seem promising. [*] we would have to modifi it a bit to account for all unicod charact ranges, but that is trivial. some option i haven't fulli explor yet includ the python weasyprint project and the facebook-yoga project. i'm open to your ideas!
